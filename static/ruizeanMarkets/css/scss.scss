@charset "utf-8";

@mixin blur($px:4){
    -webkit-filter: blur($px + px);
    -moz-filter: blur($px + px);
    -ms-filter: blur($px + px);
    filter: blur($px + px);
    filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius=$px, MakeShadow=false);
}
@mixin transform($transform...) {
	-webkit-transform:$transform;
	-moz-transform:$transform;
	-ms-transform:$transform;
	-o-transform:$transform;
	transform:$transform;
}
@mixin transition($transition...) {
	-webkit-transition:$transition;
	-moz-transition:$transition;
	-ms-transition:$transition;
	-o-transition:$transition;
	transition:$transition;
}
@mixin delay($delay) {
	-webkit-transition-delay:$delay;
	-moz-transition-delay:$delay;
	-ms-transition-delay:$delay;
	-o-transition-delay:$delay;
	transition-delay:$delay;
}
@mixin skew($x:0, $y:0) {
	-webkit-transform:skew($x, $y);
	-moz-transform:skew($x, $y);
	-ms-transform:skew($x, $y);
	-o-transform:skew($x, $y);
	transform:skew($x, $y);
}
@mixin translate($x:50%, $y:50%) {
	-webkit-transform:translate($x, $y);
	-moz-transform:translate($x, $y);
	-ms-transform:translate($x, $y);
	-o-transform:translate($x, $y);
	transform:translate($x, $y);
}
@mixin translate3d($x:50%, $y:50%, $z:50%) {
	-webkit-transform:translate3d($x, $y, $z);
	-moz-transform:translate3d($x, $y, $z);
	-ms-transform:translate3d($x, $y, $z);
	-o-transform:translate3d($x, $y, $z);
	transform:translate3d($x, $y, $z);
}
@mixin scale($x:1, $y:1) {
	-webkit-transform:scale($x, $y);
	-moz-transform:scale($x, $y);
	-ms-transform:scale($x, $y);
	-o-transform:scale($x, $y);
	transform:scale($x, $y);
}
@mixin rotate($value:0deg) {
	-webkit-transform:rotate($value);
	-moz-transform:rotate($value);
	-ms-transform:rotate($value);
	-o-transform:rotate($value);
	transform:rotate($value);
}
@mixin perspective($value:800px){
    -webkit-perspective: $value;
    -moz-perspective: $value;
    -ms-perspective: $value;
    -o-perspective: $value;
    perspective: $value;
}
@mixin transformOrigin($x:center, $y:center){
    -webkit-transform-origin:$x $y;
    -moz-transform-origin:$x $y;
    -ms-transform-origin:$x $y;
    -o-transform-origin:$x $y;
    transform-origin:$x $y;
}
@mixin opacity($value) {
	opacity:$value;
	filter:alpha(opacity=$value*100);
}
@mixin radialGradient($type:circle, $color...){
    background: -webkit-radial-gradient($type, $color);
    background: -moz-radial-gradient($type, $color);
    background: -o-radial-gradient($type, $color);
    background: radial-gradient($type, $color);
}
@mixin animation($args){
    -webkit-animation: $args;
    -moz--webkit-animation: $args;
    -ms-animation: $args;
    -o-animation: $args;
    animation: $args;
}
@mixin display($value:flex){
	display: -webkit-+$value;
	display: -moz-+$value;
	display: -ms-+$value;
	display: -o-+$value;
	display: $value;
}
@mixin flex($value:1){
	-webkit-flex: $value;
	-moz-flex: $value;
	-ms-flex: $value;
	-o-flex: $value;
	flex: $value;
}
@mixin alignItems($value:center){
	-webkit-align-items: $value;
	-moz-align-items: $value;
	-ms-align-items: $value;
	-o-align-items: $value;
	align-items: $value;
}
@mixin alignContent($value:center){
	-webkit-align-content: $value;
	-moz-align-content: $value;
	-ms-align-content: $value;
	-o-align-content: $value;
	align-content: $value;
}
@mixin alignSelf($value:center){
	-webkit-align-self: $value;
	-moz-align-self: $value;
	-ms-align-self: $value;
	-o-align-self: $value;
	align-self: $value;
}
@mixin justifyContent($value:center){
	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	-ms-justify-content: $value;
	-o-justify-content: $value;
	justify-content: $value;
}
@mixin appearance($value:none){
	-webkit-appearance: $value;
	-moz-appearance: $value;
	-ms-appearance: $value;
	-o-appearance: $value;
	appearance: $value;
}
@mixin placeholderColor($value:nth($color, 6)){
    &::-webkit-input-placeholder, &::-webkit-input-placeholder { color: $value; }
    &:-ms-input-placeholder, &:-ms-input-placeholder { color: $value; }
    &::-moz-placeholder, &::-moz-placeholder { color: $value; }
    &:-moz-placeholder, &:-moz-placeholder { color: $value; }
}
@mixin placeholderCenter($value:center){
    &::-webkit-input-placeholder, &::-webkit-input-placeholder { text-align:$value; }
    &:-ms-input-placeholder, &:-ms-input-placeholder { text-align:$value; }
    &::-moz-placeholder, &::-moz-placeholder { text-align:$value; }
    &:-moz-placeholder, &:-moz-placeholder { text-align:$value; }
}
@mixin textSizeAdjust($value:100%){
	-webkit-text-size-adjust : $value;
	-moz-text-size-adjust : $value;
	-ms-text-size-adjust : $value;
	-o-text-size-adjust : $value;
	text-size-adjust : $value;
}
@mixin boxSizing($value:border-box){
	-webkit-box-sizing: $value;
	-moz-box-sizing : $value;
	-ms-box-sizing : $value;
	-o-box-sizing : $value;
	box-sizing : $value;
}
@mixin gradient($value1, $value2){
    filter: alpha(opacity=100 finishopacity=50 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr=$value1,endcolorstr=$value2,gradientType=0);
    -ms-filter: alpha(opacity=100 finishopacity=50 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr=$value1,endcolorstr=$value2,gradientType=0);  
    background: $value1; /* 一些不支持背景渐变的浏览器 */  
    background: -moz-linear-gradient(top, $value1, $value2);  
    background: -webkit-gradient(linear, 0 0, 0 bottom, from($value1), to($value2));
}
@mixin gradients($direction, $values...){
	background: -webkit-linear-gradient($direction, $values);
	background: -o-linear-gradient($direction, $values);
	background: -moz-linear-gradient($direction, $values);
	background: linear-gradient($direction, $values);
}
@mixin borderGradients($direction, $values...){
	border-image: -webkit-linear-gradient($direction, $values);
	border-image: -o-linear-gradient($direction, $values);
	border-image: -moz-linear-gradient($direction, $values);
	border-image: linear-gradient($direction, $values);
}
@mixin backgroundImage($url:_blank, $repeat:no-repeat, $position:center, $size:cover){
    background-image: url($url);
    background-repeat: $repeat;
    background-position: $position;
    background-size: $size;
}
@mixin fsrem($FSARRAY, $multiple:1){
	@each $name , $value in $FSARRAY {
		@if $name == null {
			font-size: $value * $multiple * 0.01rem;
		}
		@else {
			@media screen and (max-width: $name) {
				font-size: $value * $multiple * 0.01rem;
			}
		}
	}
}
@mixin fspx($FSARRAY, $multiple:1){
	@each $name , $value in $FSARRAY {
		@if $name == null {
			font-size: $value * $multiple * 1px;
		}
		@else {
			@media screen and (max-width: $name) {
				font-size: $value * $multiple * 1px;
			}
		}
	}
}
@mixin keyframes($aniName){
	@-webkit-keyframes #{$aniName}{
		@content;
	}
	@-moz-keyframes #{$aniName}{
		@content;
	}
	@-ms-keyframes #{$aniName}{
		@content;
	}
	@-o-keyframes #{$aniName}{
		@content;
	}
	@keyframes #{$aniName}{
		@content;
	}
}


$FS8 : (
	null : 8
);
$FS10 : (
	null : 10
);
$FS11 : (
	null : 11
);
$FS12 : (
	null : 12
);
$FS13 : (
	null : 13
);
$FS14 : (
	null : 14
);
$FS15 : (
	null : 15,
		1024px : 14
);
$FS16 : (
	null : 16,
		1024px : 14,
);
$FS17 : (
	null : 17,
		1366px : 16,
		1024px : 14,
);
$FS18 : (
	null : 18,
		1366px : 16,
		1024px : 15,
);
$FS20 : (
	null : 20,
		1366px : 18,
		1024px : 16,
);
$FS24 : (
	null : 24,
		1366px : 20,
		1024px : 18,
);
$FS32 : (
	null : 32
);
$FS33 : (
	null : 33
);
$FS40 : (
	null : 40
);
$FS48 : (
	null : 48,
		1366px : 40,
		922px : 32,

);
$FS50 : (
	null : 50
);
$FS60 : (
	null : 60
);
$FS80 : (
	null : 80
);
$FS144 : (
	null : 144
);

$_FF_Arial : 'arial','Microsoft Yahei','STHeiti Light';
$_FF_MicrosoftYahei : 'Microsoft Yahei','arial','STHeiti Light';